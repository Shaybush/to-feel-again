services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/1-init.sql
    networks:
      - postgres_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: Aa123456
    ports:
      - "8080:80"
    depends_on:
      - postgres
  
  webdb:
    image: webdb/app:latest
    container_name: webdb
    restart: always
    ports:
      - "127.0.0.1:22071:22071"
    volumes:
      - $HOME/.webdb:/usr/src/app/static/version
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - postgres_network
networks:
  postgres_network:
    driver: bridge
volumes:
  postgres_data: 
      